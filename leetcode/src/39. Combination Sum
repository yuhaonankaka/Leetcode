class Solution {
  public List<List<Integer>> combinationSum(int[] nums, int target) {
    List<List<Integer>> list = new ArrayList<>();
    Arrays.sort(nums);
    backtrack(list, new ArrayList<>(), nums, target, 0, 0);
    return list;
}

private void backtrack(List<List<Integer>> list, List<Integer> tempList, int [] nums, int target, int sum, int start){
    if(sum > target) return;
    else if(sum == target) list.add(new ArrayList<>(tempList));
    else{ 
        for(int i = start; i < nums.length; i++){
            tempList.add(nums[i]);
            backtrack(list, tempList, nums, target,sum+nums[i], i); // 只需要自己往后循环就行了， 2 3 与 3 2 一样的。
            tempList.remove(tempList.size() - 1);
        }
    }
}
}
