/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        if(root == null){
            return  new ArrayList<List<Integer>>();
        }
      List<List<Integer>> result = new ArrayList<List<Integer>>();
        LinkedList<TreeNode> queue = new LinkedList<TreeNode>();
        queue.offer(root);
        while(!queue.isEmpty()){
            LinkedList<TreeNode> queue2 = new LinkedList<TreeNode>();
            List<Integer> level = new ArrayList<Integer>();
            for(int i = 0;i<queue.size();i++){
                level.add(queue.get(i).val);
                if(queue.get(i).left!=null)
                    queue2.offer(queue.get(i).left);
                 if(queue.get(i).right!=null)
                    queue2.offer(queue.get(i).right);
            }
            result.add(level);
            queue = queue2;
        }
    return result;
    }
}
